{"version":3,"sources":["App.jsx","index.js"],"names":["Square","props","type","onClick","value","App","state","gameBoard","player","someoneWon","didSomeoneWin","currentPlayer","y","length","x","handleClick","console","log","setState","resetGame","square","this","map","item","string","key","id","width","window","innerWidth","height","innerHeight","className","Component","ReactDOM","render","document","getElementById"],"mappings":"uRA2FA,SAASA,EAAOC,GACd,OACE,4BAAQC,KAAK,SAASC,QAASF,EAAME,SAClCF,EAAMG,OAIEC,M,2MA9FbC,MAAQ,CACNC,UAAW,CACT,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,KAEXC,OAAQ,IACRC,WAAY,I,EAEdC,cAAgB,SAACH,EAAWI,GAC1B,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAUM,OAAQD,IACpC,GAAIL,EAAUK,GAAG,KAAOD,GACnBJ,EAAUK,GAAG,KAAOD,GACpBJ,EAAUK,GAAG,KAAOD,EACvB,OAAOA,EAGX,IAAK,IAAIG,EAAI,EAAGA,EAAIP,EAAUM,OAAQC,IACpC,GAAIP,EAAU,GAAGO,KAAOH,GACnBJ,EAAU,GAAGO,KAAOH,GACpBJ,EAAU,GAAGO,KAAOH,EACvB,OAAOA,EAGX,OAAIJ,EAAU,GAAG,KAAOI,GACnBJ,EAAU,GAAG,KAAOI,GACpBJ,EAAU,GAAG,KAAOI,EAChBA,EAELJ,EAAU,GAAG,KAAOI,GACnBJ,EAAU,GAAG,KAAOI,GACpBJ,EAAU,GAAG,KAAOI,EAChBA,EAEF,I,EAETI,YAAc,SAACH,EAAGE,GAChB,IAAMP,EAAS,YAAO,EAAKD,MAAMC,WAEjC,GADAS,QAAQC,IAAIV,EAAUK,GAAGE,IACD,KAApBP,EAAUK,GAAGE,KAAc,EAAKR,MAAMG,WAAY,CACpDF,EAAUK,GAAGE,GAAK,EAAKR,MAAME,OAC7B,IAAMC,EAAa,EAAKC,cAAcH,EAAW,EAAKD,MAAME,QACtDA,EAA+B,MAAtB,EAAKF,MAAME,OAAiB,IAAM,IACjD,EAAKU,SAAS,CACVX,YACAC,SACAC,iB,EAIRU,UAAY,WACV,EAAKD,SAAS,CACZX,UAAW,CACP,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,KAEXC,OAAQ,IACRC,YAAY,K,wEAGR,IAAD,OACHW,EAASC,KAAKf,MAAMC,UAAUe,KAAI,SAACC,EAAMX,GAI3C,OAHiBW,EAAKD,KAAI,SAACE,EAAQV,GACjC,OAAO,kBAACd,EAAD,CAAQG,QAAS,kBAAM,EAAKY,YAAYH,EAAGE,IAAIV,MAAOoB,EAAQC,IAAKb,EAAIE,UAIlF,OACE,8BACE,yBAAKY,GAAG,UACLL,KAAKf,MAAMG,YACT,kBAAC,IAAD,CACCkB,MAAOC,OAAOC,WACdC,OAAQF,OAAOG,cAClBV,KAAKf,MAAMG,YAAc,sCAAYY,KAAKf,MAAMG,WAAvB,UACxBY,KAAKf,MAAMG,YAAc,uCAAaY,KAAKf,MAAME,QAClDa,KAAKf,MAAMG,YAAc,4BAAQiB,GAAG,QAAQxB,KAAK,SAASC,QAAS,kBAAM,EAAKgB,cAArD,UAE5B,yBAAKa,UAAU,QACZZ,Q,GAjFOa,aCElBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.9db3091a.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport Confetti from 'react-confetti';\n\nclass App extends Component {\n  state = {\n    gameBoard: [\n      ['', '', ''],\n      ['', '', ''],\n      ['', '', '']\n    ],\n    player: 'X',\n    someoneWon: '',\n  };\n  didSomeoneWin = (gameBoard, currentPlayer) => {\n    for (let y = 0; y < gameBoard.length; y++) {\n      if (gameBoard[y][0] === currentPlayer\n        && gameBoard[y][1] === currentPlayer\n        && gameBoard[y][2] === currentPlayer) {\n        return currentPlayer;\n      }\n    }\n    for (let x = 0; x < gameBoard.length; x++) {\n      if (gameBoard[0][x] === currentPlayer\n        && gameBoard[1][x] === currentPlayer\n        && gameBoard[2][x] === currentPlayer) {\n        return currentPlayer;\n      }\n    }\n    if (gameBoard[0][0] === currentPlayer\n      && gameBoard[1][1] === currentPlayer\n      && gameBoard[2][2] === currentPlayer) {\n      return currentPlayer;\n    }\n    if (gameBoard[0][2] === currentPlayer\n      && gameBoard[1][1] === currentPlayer\n      && gameBoard[2][0] === currentPlayer) {\n      return currentPlayer;\n    }\n    return '';\n  };\n  handleClick = (y, x) => {\n    const gameBoard = [...this.state.gameBoard];\n    console.log(gameBoard[y][x]);\n    if (gameBoard[y][x] === '' && !this.state.someoneWon) {\n      gameBoard[y][x] = this.state.player;\n      const someoneWon = this.didSomeoneWin(gameBoard, this.state.player);\n      const player = this.state.player === 'X' ? 'O' : 'X';\n      this.setState({\n          gameBoard,\n          player,\n          someoneWon\n      })\n    }\n  };\n  resetGame = () => {\n    this.setState({\n      gameBoard: [\n          ['', '', ''],\n          ['', '', ''],\n          ['', '', '']\n        ],\n        player: 'X',\n        someoneWon: false,\n    })\n  };\n  render() {\n    let square = this.state.gameBoard.map((item, y) => {\n      let eachString = item.map((string, x) => {\n        return <Square onClick={() => this.handleClick(y, x)} value={string} key={y + x}/>\n      })\n      return eachString;\n    });\n    return (\n      <main>\n        <div id=\"header\">\n          {this.state.someoneWon\n          && <Confetti\n              width={window.innerWidth}\n              height={window.innerHeight}/>}\n          {this.state.someoneWon && <h1>Player {this.state.someoneWon} won!</h1>}\n          {!this.state.someoneWon && <h1>Player: {this.state.player}</h1>}\n          {this.state.someoneWon && <button id=\"reset\" type=\"button\" onClick={() => this.resetGame()}>Clear</button>}\n        </div>\n        <div className=\"grid\">\n          {square}\n        </div>\n      </main>\n    );\n  }\n}\n\nfunction Square(props) {\n  return (\n    <button type=\"button\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  )\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}